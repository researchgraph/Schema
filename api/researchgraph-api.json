{
  "swagger": "2.0",
  "info": {
    "description": "This is the list of Research Graph APIs.",
    "version": "1.0.0",
    "title": "Research Graph",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "nnambiar@swin.edu.au"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "researchgraph.cloud",
  "basePath": "/api",
  "schemes": [
    "https",
    "http"
  ],
  "tags": [
    {
      "name": "Open Source LLMs",
      "description": "Open source LLM models running on Ollama",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://ollama.com/"
      }
    },
    {
      "name": "OpenAI",
      "description": "Access to OpenAI API",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "https://platform.openai.com/docs/api-reference/introduction"
      }
    },
    {
      "name": "National Graph API",
      "description": "Access to researcher and organisation information from the knowledge graph"
    },
    {
      "name": "Nexus Graph API",
      "description": "Retrieve research collaboration networks by ORCID or DOI identifiers"
    }
  ],
  "paths": {
    "/generate": {
      "post": {
        "tags": [
          "Open Source LLMs"
        ],
        "summary": "Generate a response for the prompt using the provided model",
        "description": "",
        "operationId": "generateResponse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Ollama Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ollama"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ollama/tags": {
      "get": {
        "tags": [
          "Open Source LLMs"
        ],
        "summary": "List the available models",
        "description": "",
        "operationId": "listModels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/gpt": {
      "post": {
        "tags": [
          "OpenAI"
        ],
        "summary": "Generate a chat completion",
        "description": "Sends a prompt to OpenAI's language model and returns a response.",
        "operationId": "createChatCompletion",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "GPT Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChatCompletionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with AI-generated message.",
            "schema": {
              "$ref": "#/definitions/ChatCompletionResponse"
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "401": {
            "description": "Unauthorized (missing or invalid API key)."
          },
          "429": {
            "description": "Rate limit exceeded."
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/national-graph/researchers": {
      "get": {
        "tags": [
          "National Graph API"
        ],
        "summary": "Search for researchers by name",
        "description": "Searches the knowledge graph for researchers whose names closely match the provided search term. Uses levenshtein distance fuzzy matching with an edit distance of 3 or less. Returns researchers ordered by edit distance and publication/funding counts.",
        "operationId": "searchResearchers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name or partial name to search for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with researcher information",
            "schema": {
              "$ref": "#/definitions/ResearcherResponse"
            }
          },
          "400": {
            "description": "Missing name parameter",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/national-graph/organisations": {
      "get": {
        "tags": [
          "National Graph API"
        ],
        "summary": "Search for organisations by name",
        "description": "Searches the knowledge graph for organisations whose names contain the provided search term. Uses levenshtein distance fuzzy matching with an edit distance of 3 or less. Returns organisations with associated researcher, publication, and funding counts.",
        "operationId": "searchOrganisations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name or partial name to search for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with organisation information",
            "schema": {
              "$ref": "#/definitions/OrganisationResponse"
            }
          },
          "400": {
            "description": "Missing name parameter",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/nexus/orcid/{orcid}": {
      "get": {
        "tags": [
          "Nexus Graph API"
        ],
        "deprecated": true,
        "summary": "Get collaboration network by ORCID ID",
        "description": "Retrieves the complete collaboration network for a researcher identified by their ORCID ID. This endpoint returns the researcher's profile information, collaborators and their affiliations, publications and datasets, grant funding information, organisation details with Wikipedia and ranking data, and relationship mappings between all entities. The ORCID ID should be provided in the standard format (e.g., 0000-0000-0000-0000) or just the numeric portion.",
        "operationId": "getCollaborationNetworkByOrcid",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orcid",
            "in": "path",
            "description": "ORCID identifier for the researcher (format: 0000-0000-0000-0000 or numeric only)",
            "required": true,
            "type": "string",
            "pattern": "^(\\d{4}-\\d{4}-\\d{4}-\\d{3}[\\dX]|\\d{15}[\\dX])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved collaboration network",
            "schema": {
              "$ref": "#/definitions/CollaborationNetworkResponse"
            }
          },
          "400": {
            "description": "Bad request - Invalid ORCID or network too large",
            "schema": {
              "$ref": "#/definitions/CollaborationNetworkErrorResponse"
            }
          }
        }
      }
    },
    "/nexus/doi/{doi}": {
      "get": {
        "tags": [
          "Nexus Graph API"
        ],
        "deprecated": true,
        "summary": "Get collaboration network by DOI",
        "description": "Retrieves the collaboration network for a publication or dataset identified by its DOI. This endpoint returns the publication/dataset metadata, authors and their profiles, co-authors' other works, institutional affiliations, related grants, and collaboration relationships. The DOI can be provided in various formats: Full URL (https://doi.org/10.1000/example), with prefix (doi:10.1000/example), or clean format (10.1000/example). The API automatically normalizes the DOI format.",
        "operationId": "getCollaborationNetworkByDoi",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "doi",
            "in": "path",
            "description": "DOI identifier for the publication or dataset (various formats accepted)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved collaboration network",
            "schema": {
              "$ref": "#/definitions/CollaborationNetworkResponse"
            }
          },
          "400": {
            "description": "Bad request - Invalid DOI or network too large",
            "schema": {
              "$ref": "#/definitions/CollaborationNetworkErrorResponse"
            }
          }
        }
      }
    },

    "/national-graph/orcid/{orcid}": {
      "get": {
        "tags": [
          "National Graph API"
        ],
        "summary": "Get collaboration network by ORCID ID",
        "description": "Retrieves the complete collaboration network for a researcher identified by their ORCID ID. This endpoint returns the researcher's profile information, collaborators and their affiliations, publications and datasets, grant funding information, organisation details with Wikipedia and ranking data, and relationship mappings between all entities. The ORCID ID should be provided in the standard format (e.g., 0000-0000-0000-0000) or just the numeric portion.",
        "operationId": "getCollaborationNetworkByOrcid",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orcid",
            "in": "path",
            "description": "ORCID identifier for the researcher (format: 0000-0000-0000-0000 or numeric only)",
            "required": true,
            "type": "string",
            "pattern": "^(\\d{4}-\\d{4}-\\d{4}-\\d{3}[\\dX]|\\d{15}[\\dX])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved collaboration network",
            "schema": {
              "$ref": "#/definitions/CollaborationNetworkResponse"
            }
          },
          "400": {
            "description": "Bad request - Invalid ORCID or network too large",
            "schema": {
              "$ref": "#/definitions/CollaborationNetworkErrorResponse"
            }
          }
        }
      }
    },
    "/national-graph/doi/{doi}": {
      "get": {
        "tags": [
          "National Graph API"
        ],
        "summary": "Get collaboration network by DOI",
        "description": "Retrieves the collaboration network for a publication or dataset identified by its DOI. This endpoint returns the publication/dataset metadata, authors and their profiles, co-authors' other works, institutional affiliations, related grants, and collaboration relationships. The DOI can be provided in various formats: Full URL (https://doi.org/10.1000/example), with prefix (doi:10.1000/example), or clean format (10.1000/example). The API automatically normalizes the DOI format.",
        "operationId": "getCollaborationNetworkByDoi",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "doi",
            "in": "path",
            "description": "DOI identifier for the publication or dataset (various formats accepted)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved collaboration network",
            "schema": {
              "$ref": "#/definitions/CollaborationNetworkResponse"
            }
          },
          "400": {
            "description": "Bad request - Invalid DOI or network too large",
            "schema": {
              "$ref": "#/definitions/CollaborationNetworkErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "ollama": {
      "type": "object",
      "required": [
        "model",
        "prompt"
      ],
      "properties": {
        "model": {
          "type": "string",
          "example": "llama3.1:latest"
        },
        "prompt": {
          "type": "string",
          "example": "Hello, how are you?"
        },
        "stream": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "ChatCompletionRequest": {
      "type": "object",
      "required": [
        "model",
        "messages"
      ],
      "properties": {
        "model": {
          "type": "string",
          "description": "ID of the model to use (e.g., gpt-4, gpt-3.5-turbo)."
        },
        "messages": {
          "type": "array",
          "description": "List of messages in the conversation.",
          "items": {
            "$ref": "#/definitions/ChatMessage"
          }
        },
        "temperature": {
          "type": "number",
          "description": "Sampling temperature, between 0 and 2.",
          "default": 1
        },
        "top_p": {
          "type": "number",
          "description": "Nucleus sampling, between 0 and 1.",
          "default": 1
        },
        "n": {
          "type": "integer",
          "description": "Number of completions to generate.",
          "default": 1
        },
        "stream": {
          "type": "boolean",
          "description": "Whether to stream back partial progress.",
          "default": false
        },
        "stop": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "description": "Up to 4 sequences where the API will stop generating further tokens."
        },
        "max_tokens": {
          "type": "integer",
          "description": "Maximum number of tokens to generate."
        },
        "presence_penalty": {
          "type": "number",
          "description": "Penalty for new tokens based on their presence in the text.",
          "default": 0
        },
        "frequency_penalty": {
          "type": "number",
          "description": "Penalty for new tokens based on their frequency in the text.",
          "default": 0
        },
        "logit_bias": {
          "type": "object",
          "description": "Modify the likelihood of specific tokens appearing in the completion.",
          "additionalProperties": {
            "type": "number"
          }
        },
        "user": {
          "type": "string",
          "description": "An optional user identifier for tracking purposes."
        }
      }
    },
    "ChatMessage": {
      "type": "object",
      "required": [
        "role",
        "content"
      ],
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "system",
            "user",
            "assistant"
          ],
          "description": "Role of the message sender."
        },
        "content": {
          "type": "string",
          "description": "Content of the message."
        }
      }
    },
    "ChatCompletionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the completion."
        },
        "object": {
          "type": "string",
          "enum": [
            "chat.completion"
          ]
        },
        "created": {
          "type": "integer",
          "description": "Timestamp of creation."
        },
        "model": {
          "type": "string",
          "description": "Model used for the completion."
        },
        "choices": {
          "type": "array",
          "description": "List of generated choices.",
          "items": {
            "$ref": "#/definitions/ChatCompletionChoice"
          }
        },
        "usage": {
          "$ref": "#/definitions/Usage"
        }
      }
    },
    "ChatCompletionChoice": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "description": "Index of the choice."
        },
        "message": {
          "$ref": "#/definitions/ChatMessage"
        },
        "finish_reason": {
          "type": "string",
          "description": "Reason for completion finishing."
        }
      }
    },
    "Usage": {
      "type": "object",
      "properties": {
        "prompt_tokens": {
          "type": "integer",
          "description": "Number of tokens in the prompt."
        },
        "completion_tokens": {
          "type": "integer",
          "description": "Number of tokens in the completion."
        },
        "total_tokens": {
          "type": "integer",
          "description": "Total number of tokens used."
        }
      }
    },
    "Researcher": {
      "type": "object",
      "properties": {
        "orcid": {
          "type": "string",
          "description": "ORCID identifier for the researcher",
          "example": "0000-0002-1825-0097"
        },
        "researcher_name": {
          "type": "string",
          "description": "Full name of the researcher",
          "example": "Alice Smith"
        },
        "key": {
          "type": "string",
          "description": "Unique key identifier for the researcher",
          "example": "researcher123"
        },
        "source": {
          "type": "string",
          "description": "Source of the researcher data",
          "example": "orcid"
        },
        "local_id": {
          "type": "string",
          "description": "Local identifier for the researcher",
          "example": "12345"
        },
        "last_updated": {
          "type": "string",
          "description": "Date when the researcher record was last updated",
          "example": "2023-12-01"
        },
        "full_name": {
          "type": "string",
          "description": "Full name of the researcher",
          "example": "Alice Jane Smith"
        },
        "first_name": {
          "type": "string",
          "description": "First name of the researcher",
          "example": "Alice"
        },
        "last_name": {
          "type": "string",
          "description": "Last name of the researcher",
          "example": "Smith"
        },
        "url": {
          "type": "string",
          "description": "URL associated with the researcher",
          "example": "https://researcher.org/alice-smith"
        },
        "scopus_author_id": {
          "type": "string",
          "description": "Scopus Author ID for the researcher",
          "example": "57654321"
        },
        "publication_count": {
          "type": "integer",
          "description": "Number of publications associated with the researcher",
          "example": 42
        },
        "funding_count": {
          "type": "integer",
          "description": "Number of grants/funding sources associated with the researcher",
          "example": 5
        },
        "affiliations": {
          "type": "array",
          "description": "List of organisations the researcher is affiliated with",
          "items": {
            "type": "string"
          },
          "example": [
            "Swinburne University of Technology",
            "Data Science Institute"
          ]
        },
        "distance": {
          "type": "number",
          "description": "Edit distance between search term and researcher name",
          "example": 1
        }
      }
    },
    "ResearcherResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Response status",
          "example": "success"
        },
        "count": {
          "type": "integer",
          "description": "Number of researchers returned",
          "example": 3
        },
        "researchers": {
          "type": "array",
          "description": "List of researcher information",
          "items": {
            "$ref": "#/definitions/Researcher"
          }
        }
      }
    },
    "Organisation": {
      "type": "object",
      "properties": {
        "organisation_name": {
          "type": "string",
          "description": "Name of the organisation",
          "example": "Swinburne University of Technology"
        },
        "key": {
          "type": "string",
          "description": "Unique key identifier for the organisation",
          "example": "org123"
        },
        "source": {
          "type": "string",
          "description": "Source of the organisation data",
          "example": "grid"
        },
        "local_id": {
          "type": "string",
          "description": "Local identifier for the organisation",
          "example": "54321"
        },
        "last_updated": {
          "type": "string",
          "description": "Date when the organisation record was last updated",
          "example": "2023-12-01"
        },
        "url": {
          "type": "string",
          "description": "URL associated with the organisation",
          "example": "https://www.swinburne.edu.au"
        },
        "grid": {
          "type": "string",
          "description": "Global Research Identifier Database ID",
          "example": "grid.1027.4"
        },
        "doi": {
          "type": "string",
          "description": "Digital Object Identifier for the organisation",
          "example": "10.25904/1912/5674"
        },
        "ror": {
          "type": "string",
          "description": "Research Organisation Registry ID",
          "example": "https://ror.org/12345678"
        },
        "isni": {
          "type": "string",
          "description": "International Standard Name Identifier",
          "example": "0000000419368956"
        },
        "wikidata": {
          "type": "string",
          "description": "Wikidata ID",
          "example": "Q1371452"
        },
        "country": {
          "type": "string",
          "description": "Country where the organisation is located",
          "example": "Australia"
        },
        "city": {
          "type": "string",
          "description": "City where the organisation is located",
          "example": "Melbourne"
        },
        "latitude": {
          "type": "number",
          "description": "Latitude coordinates of the organisation",
          "example": -37.8221
        },
        "longitude": {
          "type": "number",
          "description": "Longitude coordinates of the organisation",
          "example": 145.0382
        },
        "researcher_count": {
          "type": "integer",
          "description": "Number of researchers affiliated with the organisation",
          "example": 150
        },
        "publication_count": {
          "type": "integer",
          "description": "Number of publications associated with the organisation",
          "example": 2500
        },
        "funding_count": {
          "type": "integer",
          "description": "Number of grants/funding sources associated with the organisation",
          "example": 75
        }
      }
    },
    "OrganisationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Response status",
          "example": "success"
        },
        "count": {
          "type": "integer",
          "description": "Number of organisations returned",
          "example": 3
        },
        "organisations": {
          "type": "array",
          "description": "List of organisation information",
          "items": {
            "$ref": "#/definitions/Organisation"
          }
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error message",
          "example": "Name parameter is required"
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code",
          "example": 400
        }
      }
    },
    "CollaborationNetworkResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "nodes": {
            "$ref": "#/definitions/NetworkNodes"
          },
          "relationships": {
            "$ref": "#/definitions/NetworkRelationships"
          },
          "stats": {
            "$ref": "#/definitions/NetworkStatistics"
          }
        },
        "required": [
          "nodes",
          "relationships",
          "stats"
        ]
      }
    },
    "CollaborationNetworkErrorResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "nodes": {
            "$ref": "#/definitions/NetworkNodes"
          },
          "relationships": {
            "$ref": "#/definitions/NetworkRelationships"
          },
          "stats": {
            "type": "object",
            "properties": {
              "linked-nodes": {
                "type": "integer",
                "description": "Number of linked nodes (for network size errors)"
              }
            }
          },
          "error": {
            "type": "string",
            "description": "Error message describing what went wrong"
          }
        },
        "required": [
          "nodes",
          "relationships",
          "stats",
          "error"
        ]
      }
    },
    "NetworkNodes": {
      "type": "object",
      "properties": {
        "researchers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkResearcher"
          }
        },
        "organisations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkOrganisation"
          }
        },
        "publications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkPublication"
          }
        },
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkDataset"
          }
        },
        "grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkGrant"
          }
        }
      },
      "required": [
        "researchers",
        "organisations",
        "publications",
        "datasets",
        "grants"
      ]
    },
    "NetworkRelationships": {
      "type": "object",
      "properties": {
        "researcher-researcher": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkRelationship"
          }
        },
        "researcher-organisation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkRelationship"
          }
        },
        "researcher-grant": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkRelationship"
          }
        },
        "researcher-publication": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkRelationship"
          }
        },
        "researcher-dataset": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkRelationship"
          }
        }
      },
      "required": [
        "researcher-researcher",
        "researcher-organisation",
        "researcher-grant",
        "researcher-publication",
        "researcher-dataset"
      ]
    },
    "NetworkStatistics": {
      "type": "object",
      "properties": {
        "researchers": {
          "type": "integer",
          "description": "Number of researchers in the network"
        },
        "organisations": {
          "type": "integer",
          "description": "Number of organisations in the network"
        },
        "publications": {
          "type": "integer",
          "description": "Number of publications in the network"
        },
        "datasets": {
          "type": "integer",
          "description": "Number of datasets in the network"
        },
        "grants": {
          "type": "integer",
          "description": "Number of grants in the network"
        },
        "linked-nodes": {
          "type": "integer",
          "description": "Total number of linked nodes (present when network exceeds limits)"
        }
      }
    },
    "NetworkResearcher": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Unique identifier for the researcher (ResearchGraph URI format)",
          "example": "researchgraph.com/orcid/0000-0000-0000-0000"
        },
        "title": {
          "type": "string",
          "description": "Full name and title of the researcher",
          "example": "Dr. John Smith"
        },
        "name": {
          "type": "string",
          "description": "Researcher's name",
          "example": "John Smith"
        },
        "orcid": {
          "type": "string",
          "description": "ORCID identifier",
          "example": "0000-0000-0000-0000"
        },
        "orcid_type": {
          "type": "string",
          "description": "ORCID record type information"
        }
      },
      "required": [
        "key"
      ]
    },
    "NetworkOrganisation": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Unique identifier for the organisation",
          "example": "researchgraph.com/wikidata/Q123456"
        },
        "title": {
          "type": "string",
          "description": "Organisation name",
          "example": "University of Example"
        },
        "url": {
          "type": "string",
          "description": "Wikipedia URL for the organisation",
          "example": "https://en.wikipedia.org/wiki/University_of_Example"
        },
        "logo": {
          "type": "string",
          "description": "URL to organisation logo image"
        },
        "times_ranking": {
          "type": "string",
          "description": "Times Higher Education ranking",
          "example": "150"
        },
        "times_url": {
          "type": "string",
          "description": "Times Higher Education profile URL"
        }
      },
      "required": [
        "key"
      ]
    },
    "NetworkPublication": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Unique identifier for the publication",
          "example": "researchgraph.com/crossref/10.1000/example"
        },
        "title": {
          "type": "string",
          "description": "Publication title",
          "example": "Advances in Research Methodology"
        },
        "doi": {
          "type": "string",
          "description": "DOI identifier",
          "example": "10.1000/example"
        },
        "publication_year": {
          "type": "string",
          "description": "Year of publication",
          "example": "2023"
        },
        "crossref_type": {
          "type": "string",
          "description": "Crossref publication type",
          "example": "journal-article"
        },
        "datacite_type": {
          "type": "string",
          "description": "DataCite resource type (for DataCite sources)"
        }
      },
      "required": [
        "key"
      ]
    },
    "NetworkDataset": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Unique identifier for the dataset",
          "example": "researchgraph.com/datacite/10.5555/example"
        },
        "title": {
          "type": "string",
          "description": "Dataset title",
          "example": "Research Data Collection 2023"
        },
        "doi": {
          "type": "string",
          "description": "DOI identifier",
          "example": "10.5555/example"
        },
        "publication_year": {
          "type": "string",
          "description": "Year of dataset publication",
          "example": "2023"
        },
        "datacite_type": {
          "type": "string",
          "description": "DataCite resource type",
          "example": "dataset"
        }
      },
      "required": [
        "key"
      ]
    },
    "NetworkGrant": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Unique identifier for the grant",
          "example": "researchgraph.com/arc/DP230000000"
        },
        "title": {
          "type": "string",
          "description": "Grant title",
          "example": "Advanced Research in Machine Learning"
        },
        "grant_id": {
          "type": "string",
          "description": "Grant ID from funding agency",
          "example": "DP230000000"
        },
        "funding_amount": {
          "type": "string",
          "description": "Funding amount (in AUD for ARC grants)",
          "example": "500000"
        },
        "funder": {
          "type": "string",
          "description": "Funding organisation name",
          "example": "Australian Research Council"
        }
      },
      "required": [
        "key",
        "grant_id",
        "funder"
      ]
    },
    "NetworkRelationship": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "description": "Source entity key in the relationship",
          "example": "researchgraph.com/orcid/0000-0000-0000-0000"
        },
        "to": {
          "type": "string",
          "description": "Target entity key in the relationship",
          "example": "researchgraph.com/wikidata/Q123456"
        }
      },
      "required": [
        "from",
        "to"
      ]
    }
  }
}